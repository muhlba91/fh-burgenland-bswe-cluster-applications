{{- if .Values.applyPolicies -}}
---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: disallow-privileged-containers
  annotations:
    policies.kyverno.io/title: Disallow Privileged Containers
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Privileged mode disables most security mechanisms and must not be allowed. This policy
      ensures Pods do not call for privileged mode.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: privileged-containers
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          Privileged mode is disallowed. The fields spec.containers[*].securityContext.privileged,
          spec.initContainers[*].securityContext.privileged, and spec.ephemeralContainers[*].securityContext.privileged must be unset or set to `false`.
        pattern:
          spec:
            =(ephemeralContainers):
              - =(securityContext):
                  =(privileged): "false"
            =(initContainers):
              - =(securityContext):
                  =(privileged): "false"
            containers:
              - =(securityContext):
                  =(privileged): "false"

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: disallow-host-path
  annotations:
    policies.kyverno.io/title: Disallow hostPath
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod,Volume
    policies.kyverno.io/description: >-
      HostPath volumes let Pods use host directories and volumes in containers.
      Using host resources can be used to access shared data or escalate privileges
      and should not be allowed. This policy ensures no hostPath volumes are in use.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: host-path
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          HostPath volumes are forbidden. The field spec.volumes[*].hostPath must be unset.
        pattern:
          spec:
            =(volumes):
              - X(hostPath): "null"

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: disallow-host-ports
  annotations:
    policies.kyverno.io/title: Disallow hostPorts
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Access to host ports allows potential snooping of network traffic and should not be
      allowed, or at minimum restricted to a known list. This policy ensures the `hostPort`
      field is unset or set to `0`. 
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: host-ports-none
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          Use of host ports is disallowed. The fields spec.containers[*].ports[*].hostPort
          , spec.initContainers[*].ports[*].hostPort, and spec.ephemeralContainers[*].ports[*].hostPort
          must either be unset or set to `0`.
        pattern:
          spec:
            =(ephemeralContainers):
              - =(ports):
                  - =(hostPort): 0
            =(initContainers):
              - =(ports):
                  - =(hostPort): 0
            containers:
              - =(ports):
                  - =(hostPort): 0

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: restrict-nodeport
  annotations:
    policies.kyverno.io/title: Disallow NodePort
    policies.kyverno.io/category: Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Service
    policies.kyverno.io/description: >-
      A Kubernetes Service of type NodePort uses a host port to receive traffic from
      any source. A NetworkPolicy cannot be used to control traffic to host ports.
      Although NodePort Services can be useful, their use must be limited to Services
      with additional upstream security checks. This policy validates that any new Services
      do not use the `NodePort` type.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: validate-nodeport
    match:
      any:
      - resources:
          kinds:
          - Service
    validate:
      message: "Services of type NodePort are not allowed."
      pattern:
        spec:
          =(type): "!NodePort"

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: restrict-ingress-wildcard
  annotations:
    policies.kyverno.io/title: Restrict Ingress Host with Wildcards
    policies.kyverno.io/category: Other
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      Ingress hosts optionally accept a wildcard as an alternative
      to precise matching. In some cases, this may be too permissive as it
      would direct unintended traffic to the given Ingress resource. This
      policy enforces that any Ingress host does not contain a wildcard
      character.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: block-ingress-wildcard
      match:
        any:
        - resources:
            kinds:
              - Ingress
      preconditions:
        all:
        - key: {{ "\"{{ request.operation || 'BACKGROUND' }}\"" }}
          operator: AnyIn
          value: ["CREATE", "UPDATE"]
      validate:
        message: "Wildcards are not permitted as hosts."
        foreach:
        - list: "request.object.spec.rules"
          deny:
            conditions:
              any:
              - key: {{ "\"{{ contains(element.host, '*') }}\"" }}
                operator: Equals
                value: true

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: restrict-ingress-domains
  annotations:
    policies.kyverno.io/title: Restrict Ingress Host Domains
    policies.kyverno.io/category: Other
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy enforces that any Ingress host matches allowed domains.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: block-ingress-domains
      match:
        any:
        - resources:
            kinds:
              - Ingress
      preconditions:
        all:
        - key: {{ "\"{{ request.operation || 'BACKGROUND' }}\"" }}
          operator: AnyIn
          value: ["CREATE", "UPDATE"]
      validate:
        message: "Domain is not permitted as host."
        foreach:
        - list: "request.object.spec.rules"
          deny:
            conditions:
              any:
              - key: {{ "\"{{ contains(element.host, 'student.bswe.fh-burgenland.muehlbachler.xyz') }}\"" }}
                operator: Equals
                value: false

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: allowed-images
  annotations:
    policies.kyverno.io/title: Allowed Images
    policies.kyverno.io/category: Other
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      This policy ensures that the only allowed images present in a given Pod, across any container type,
      come from the designated list.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    - name: good-images
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          All images in this Pod must come from an authorized source.
        deny:
          conditions:
            all:
            - key: {{ "\"{{ images.[containers, initContainers, ephemeralContainers][].*.name[] }}\"" }}
              operator: AnyNotIn
              value:
              - "ghcr.io/fhburgenland-bswe/*"
              - "nginx"

---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: require-imagepullsecrets
  annotations:
    policies.kyverno.io/title: Require imagePullSecrets
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Some registries, both public and private, require credentials in order to pull images
      from them. This policy checks those images and if they come from ghcr.io an `imagePullSecret` is required.
  labels:
    {{- include "bswe-group.labels" . | nindent 4 }}
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: check-for-image-pull-secrets
    match:
      any:
      - resources:
          kinds:
          - Pod
    preconditions:
      all:
      - key: {{ "\"{{ images.containers.*.name }}\"" }}
        operator: AnyIn
        value:
        - "ghcr.io/fhburgenland-bswe/*"
    validate:
      message: "An `imagePullSecret` is required when pulling from this registry."
      pattern:
        spec:
          imagePullSecrets:
          - name: "ghcr-credentials"

{{- end }}
